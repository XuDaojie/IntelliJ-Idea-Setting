<application>
  <component name="AppStorage">
    <histories>
      <item value="* ThreadLocals rely on per-thread linear-probe hash maps attached * to each thread (Thread.threadLocals and * inheritableThreadLocals). The ThreadLocal objects act as keys, * searched via threadLocalHashCode. This is a custom hash code * (useful only within ThreadLocalMaps) that eliminates collisions * in the common case where consecutively constructed ThreadLocals * are used by the same threads, while remaining well-behaved in * less common cases." />
      <item value="* The difference between successively generated hash codes - turns * implicit sequential thread-local IDs into near-optimally spread * multiplicative hash values for power-of-two-sized tables." />
      <item value="The initial capacity -- MUST be a power of two." />
      <item value="* Sets the current thread's copy of this thread-local variable * to the specified value. Most subclasses will have no need to * override this method, relying solely on the {@link #initialValue} * method to set the values of thread-locals. * * @param value the value to be stored in the current thread's copy of * this thread-local." />
      <item value="* InheritableThreadLocal values pertaining to this thread. This map is * maintained by the InheritableThreadLocal class." />
      <item value="/* ThreadLocal values pertaining to this thread. This map is maintained * by the ThreadLocal class. */" />
      <item value="* Abstract base class for reference objects. This class defines the * operations common to all reference objects. Because reference objects are * implemented in close cooperation with the garbage collector, this class may * not be subclassed directly." />
      <item value="* Factory method to create map of inherited thread locals. * Designed to be called only from Thread constructor. * * @param parentMap the map associated with parent thread * @return a map containing the parent's inheritable bindings" />
      <item value="* ThreadLocalMap is a customized hash map suitable only for * maintaining thread local values. No operations are exported * outside of the ThreadLocal class. The class is package private to * allow declaration of fields in class Thread. To help deal with * very large and long-lived usages, the hash table entries use * WeakReferences for keys. However, since reference queues are not * used, stale entries are guaranteed to be removed only when * the table starts running out of space." />
      <item value="The difference between successively generated hash codes - turns * implicit sequential thread-local IDs into near-optimally spread * multiplicative hash values for power-of-two-sized tables." />
      <item value="* Creates a thread pool that reuses a fixed number of threads * operating off a shared unbounded queue. At any point, at most * {@code nThreads} threads will be active processing tasks. * If additional tasks are submitted when all threads are active, * they will wait in the queue until a thread is available. * If any thread terminates due to a failure during execution * prior to shutdown, a new one will take its place if needed to * execute subsequent tasks. The threads in the pool will exist * until it is explicitly {@link ExecutorService#shutdown shutdown}." />
      <item value="Creates a thread pool that reuses a fixed number of threads * operating off a shared unbounded queue. At any point, at most * {@code nThreads} threads will be active processing tasks. * If additional tasks are submitted when all threads are active, * they will wait in the queue until a thread is available. * If any thread terminates due to a failure during execution * prior to shutdown, a new one will take its place if needed to * execute subsequent tasks. The threads in the pool will exist * until it is explicitly {@link ExecutorService#shutdown shutdown}." />
      <item value="HANDLE RESULT SETS" />
      <item value="* An actual SQL String got from an {@link SqlSource} after having processed any dynamic content. * The SQL may have SQL placeholders &quot;?&quot; and an list (ordered) of an parameter mappings * with the additional information for each parameter (at least the property name of the input object to read * the value from). * &lt;p&gt; * Can also have additional parameters that are created by the dynamic language (for loops, bind...)." />
      <item value="statement" />
      <item value="DIRTY" />
      <item value="dirty" />
      <item value="// Popular vote was to return null on 0 results and throw exception on too many." />
      <item value="Popular vote was to return null on 0 results and throw exception on too many." />
      <item value="* The primary Java interface for working with MyBatis. * Through this interface you can execute commands, get mappers and manage transactions." />
      <item value="The MyBatis SQL mapper framework makes it easier to use a relational database with object-oriented applications. MyBatis couples objects with stored procedures or SQL statements using a XML descriptor or annotations. Simplicity is the biggest advantage of the MyBatis data mapper over object relational mapping tools." />
      <item value="To get started, you'll need JRuby with the Bundler gem installed." />
      <item value="# If true, all level of TOC in a post will be displayed, rather than the activated part of it." />
      <item value="# If true, all words will placed on next lines if header width longer then sidebar width." />
      <item value="# A button to open designated chat widget in sidebar.&#10;# Firstly, you need enable the chat service you want to activate its sidebar button." />
      <item value="# TagCloud settings for tags page." />
      <item value="# If auto, save the reading progress when closing the page or clicking the bookmark-icon. # If manual, only save it by clicking the bookmark-icon." />
      <item value="# Change headers hierarchy on site-subtitle (will be main site description) and on all post / page titles for better SEO-optimization." />
      <item value="# set a canonical link tag in your hexo, you could use it for your seo of blog.&#10;# see: https://support.google.com/webmasters/answer/139066&#10;# remember to set up your url in hexo `_config.yml` (e.g. url: http://yourdomain.com)" />
      <item value="# Disable Baidu transformation on mobile devices." />
      <item value="Available" />
      <item value="If manual, trigger search by pressing enter key or search button." />
      <item value="Preload the search data when the page loads." />
      <item value="Unescape html strings to the readable one." />
      <item value="better Performance" />
      <item value="Show number of visitors to each article." />
      <item value="Remove unnecessary files after hexo generate." />
      <item value="Enable sidebar on narrow view" />
      <item value="Specify the date when the site was setup. If not defined, current year will be used." />
      <item value="transition" />
      <item value="# If false, merge configs from `_data/next.yml` into default configuration (rewrite).&#10;# If true, will fully override default configuration by options from `_data/next.yml` (override). Only for NexT settings.&#10;# And if true, all config from default NexT `_config.yml` must be copied into `next.yml`. Use if you know what you are doing.&#10;# Useful if you want to comment some options from NexT `_config.yml` by `next.yml` without editing default config." />
      <item value="* Build message codes for the given error code and object name. * Used for building the codes list of an ObjectError. * @param errorCode the error code used for rejecting the object * @param objectName the name of the object * @return the message codes to use" />
      <item value="fluent" />
      <item value="Fluent" />
      <item value="h the invocation handler to dispatch method invocations to" />
      <item value="the list of interfaces for the proxy class * to implement" />
      <item value="the class loader to define the proxy class" />
      <item value="Spring's repackaging of * &lt;a href=&quot;https://github.com/cglib/cglib&quot;&gt;CGLIB 3.3&lt;/a&gt; * (with Spring-specific patches; for internal use only). * * &lt;p&gt;This repackaging technique avoids any potential conflicts with * dependencies on CGLIB at the application level or from third-party * libraries and frameworks. * * &lt;p&gt;As this repackaging happens at the class file level, sources * and javadocs are not available here." />
      <item value="* A visitor to visit a Java annotation. The methods of this class must be called in the following * order: ( {@code visit} | {@code visitEnum} | {@code visitAnnotation} | {@code visitArray} )* * {@code visitEnd}. * * @author Eric Bruneton * @author Eugene Kuleshov" />
      <item value="Empty class used to ensure that the {@code org.springframework.cglib} * package is processed during javadoc generation. * * &lt;p&gt;See &lt;a href=&quot;package-summary.html&quot;&gt;package-level javadocs&lt;/a&gt; for more * information on {@code org.springframework.cglib}. * * @author Chris Beams * @since 3.2" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="100" />
        <entry key="ENGLISH" value="101" />
        <entry key="CHINESE_TRADITIONAL" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="33b178d8a0960b4a" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>